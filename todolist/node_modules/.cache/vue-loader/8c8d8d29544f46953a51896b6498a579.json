{"remainingRequest":"/home/khuong/Documents/todolist/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khuong/Documents/todolist/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/home/khuong/Documents/todolist/src/components/HelloWorld.vue","mtime":1627640414702},{"path":"/home/khuong/Documents/todolist/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khuong/Documents/todolist/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/khuong/Documents/todolist/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/khuong/Documents/todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khuong/Documents/todolist/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDF7IAogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogYmlzcXVlOwogICAgcGFkZGluZzogMTBweCAwOwp9CnRhYmxlIHsKICAgIHdpZHRoOiA4MCU7CiAgICBtYXJnaW46IDAgYXV0bzsKfQouYnRuLWFkZCB7IAogICAgbWFyZ2luLWxlZnQ6IDEzM3B4OwogICAgcGFkZGluZzogNnB4IDIwcHg7Cn0KCi5ub3RpY2UgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiAxLjJlbTsKICB3aWR0aDogMjUlOwogIHBvc2l0aW9uOiBmaXhlZDsKICB0b3A6IDY5cHg7CiAgcmlnaHQ6IDA7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <h1>Todo App</h1>\n      <div class=\"notice\" v-if=\"message !== ''\">\n        {{message}}\n      </div>\n      <button class=\"btn btn-success btn-add\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Add</button>\n      <table class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">#ID</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">#</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"product in products\"\n            class=\"todo\"\n            v-bind:key=\"product.key\">\n                <th scope=\"row\">{{ product.id }}</th>\n                <td>{{ product.name }}</td>\n                <td>{{ product.description }}</td>\n                <td>{{ product.price }}</td>\n                <td>\n                    <button class=\"btn btn-success\" \n                    data-toggle=\"modal\" data-target=\"#updateModalCenter\"\n                    @click=\"edit(product.id, product.name, product.description, product.price)\">Edit</button>\n                    <button class=\"btn btn-danger\" @click=\"deleteProduct(product.id)\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n        </table>\n\n        <!-- Modal add-->\n        <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add new product</h5>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                  </button>\n              </div>\n              <div class=\"modal-body\">\n                  <form method=\"POST\" @submit.prevent=\"onSubmit()\">\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputName\">Name</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" class=\"form-control\" id=\"exampleInputName\" v-model=\"name\" placeholder=\"Enter Name\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputDescription\">Description</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" class=\"form-control\" id=\"exampleInputDescription\" v-model=\"description\" placeholder=\"Enter Description\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputPrice\">Price</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"number\" class=\"form-control\" id=\"exampleInputPrice\" v-model=\"price\" placeholder=\"Enter Price\">\n                        </div>\n                      </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"onSubmit()\" data-dismiss=\"modal\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  </form>\n              </div>\n              </div>\n          </div>\n        </div>\n\n        <!-- Modal update-->\n        <div class=\"modal fade\" id=\"updateModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add new product</h5>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                  </button>\n              </div>\n              <div class=\"modal-body\">\n                  <form method=\"POST\" @submit.prevent=\"update(product.update_id, this.price, this.description, this.price)\">\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputName\">Name</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" class=\"form-control\" id=\"exampleInputName\" v-model=\"update_name\" placeholder=\"Enter Name\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputDescription\">Description</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"text\" class=\"form-control\" id=\"exampleInputDescription\" v-model=\"update_description\" placeholder=\"Enter Description\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <label for=\"exampleInputPrice\">Price</label>\n                        </div>\n                        <div class=\"col-md-9\">\n                          <input type=\"number\" class=\"form-control\" id=\"exampleInputPrice\" v-model=\"update_price\" placeholder=\"Enter Price\">\n                        </div>\n                      </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" @click=\"update()\" data-dismiss=\"modal\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  </form>\n              </div>\n              </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    export default {\n        name: \"Todos\",\n        data() {\n            return { \n                products: [],\n                name: '',\n                description: '',\n                price: '',\n                update_id: '',\n                update_name: '',\n                update_description: '',\n                update_price: '',\n                message: '',\n                error: false\n            }\n        },\n        // created(){\n        //     this.getProducts();\n        // },\n        mounted: function() {\n            this.getProducts();\n        },\n        methods:{\n            // ...mapActions([\"fetchTodos\", \"deleteTodo\"]),\n            getProducts(){\n               axios.get('http://localhost/vue-project/todolist/api/index.php?controller=product&action=index')\n                .then(response => {\n                    this.products = response.data;\n                })\n                .catch(function (error) {\n                    console.log(error);\n                }); \n            },\n            edit(id, product_name, product_description, product_price) {\n              this.update_name = product_name;\n              this.update_description = product_description;\n              this.update_price = product_price;\n              this.update_id = id;\n            }\n            ,\n            update() {\n                var formData = new FormData();\n                formData.append('id', this.update_id);\n                formData.append('name', this.update_name);\n                formData.append('description', this.update_description);\n                formData.append('price', this.update_price);\n                console.log(formData);\n                axios({\n                    url: 'http://localhost/vue-project/todolist/api/index.php?controller=product&action=update',\n                    method: 'post',\n                    data: formData\n                }).then(res => {\n                    console.log(res.data);\n                    this.message = res.data.message;\n                    this.error = false;\n                    this.getProducts();\n                }).catch(err => {\n                    console.log(err);\n                })\n            },\n            deleteProduct(id) {\n                if(window.confirm(\"Delete this record?\")) {\n                    var formData = new FormData();\n                    formData.append('id', id);\n                    axios({\n                        url: 'http://localhost/vue-project/todolist/api/index.php?controller=product&action=delete',\n                        method: 'post',\n                        data: formData\n                    }).then(res => {\n                        console.log(res);\n                        this.message = res.data.message;\n                        this.getProducts();\n                    }).catch(err => {\n                        console.log(err);\n                    })\n                }\n            },\n            onSubmit() {\n                if(this.name !== '' && this.description !== '' && this.price !== '') {\n                    var formData = new FormData();\n                    formData.append('name', this.name);\n                    formData.append('description', this.description);\n                    formData.append('price', this.price);\n                    axios({\n                        url: 'http://localhost/vue-project/todolist/api/index.php?controller=product&action=create',\n                        method: 'post',\n                        data: formData  \n                    }).then(res => {\n                        console.log(res);\n                        this.message = res.data.message;\n                        this.getProducts();\n                    }).catch(err => {\n                        console.log(err);\n                    })\n                }\n            }\n        }\n    };\n</script>\n\n<style scoped>\n  h1{ \n      text-align: center;\n      background-color: bisque;\n      padding: 10px 0;\n  }\n  table {\n      width: 80%;\n      margin: 0 auto;\n  }\n  .btn-add { \n      margin-left: 133px;\n      padding: 6px 20px;\n  }\n\n  .notice {\n    text-align: center;\n    border: 1px solid green;\n    background-color: green;\n    color: white;\n    font-size: 1.2em;\n    width: 25%;\n    position: fixed;\n    top: 69px;\n    right: 0;\n    border-radius: 5px;\n  }\n</style>"]}]}